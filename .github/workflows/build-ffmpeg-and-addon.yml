name: Build FFmpeg and Node Addon

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-linux:
    name: Build on Ubuntu (x64)
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      options: --user root
    env:
      PREFIX: ${{ github.workspace }}/ffmpeg_out
      DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install -y autoconf automake build-essential pkg-config yasm nasm libtool git python3 curl ca-certificates

      - name: Clone FFmpeg release/7.1 into ffmpeg_src
        run: |
          rm -rf ffmpeg_src
          git clone --depth 1 --branch release/7.1 https://github.com/FFmpeg/FFmpeg ffmpeg_src

      - name: Clone silk-v3-decoder
        run: |
          rm -rf silk-v3-decoder
          git clone https://github.com/kn007/silk-v3-decoder silk-v3-decoder

      - name: Apply repository patches to ffmpeg_src
        run: |
          set -euo pipefail
          echo "Applying patches to ffmpeg_src"
          cd ffmpeg_src && git apply --whitespace=fix ../patches/*.patch
        shell: bash

      - name: Configure & build static FFmpeg
        run: |
          chmod +x scripts/build_ffmpeg_linux.sh || true
          ./scripts/build_ffmpeg_linux.sh "$PREFIX"

      - name: Show installed libs
        run: ls -la "$PREFIX/lib" || true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install npm deps
        run: npm ci

      - name: Configure Node addon (point to built FFmpeg)
        run: npx cmake-js configure -- -DFFMPEG_SOURCE_DIR="$PREFIX"

      - name: Build Node addon (cmake-js)
        run: npx cmake-js build --arch=x64 --runtime=node

      - name: Upload built addon
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-addon-linux
          path: |
            build/**/*.node
            Release/**/*.node
      - name: Upload FFmpeg headers and libs
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-libs-linux
          path: |
            ffmpeg_out/include
            ffmpeg_out/lib

  build-linux-arm64:
    name: Build on Ubuntu (ARM64)
    runs-on: ubuntu-22.04-arm
    container:
      image: ubuntu:20.04
      options: --user root --platform linux/arm64
    env:
      PREFIX: ${{ github.workspace }}/ffmpeg_out
      DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install -y autoconf automake build-essential pkg-config yasm nasm libtool git python3 curl ca-certificates

      - name: Clone FFmpeg release/7.1 into ffmpeg_src
        run: |
          rm -rf ffmpeg_src
          git clone --depth 1 --branch release/7.1 https://github.com/FFmpeg/FFmpeg ffmpeg_src

      - name: Clone silk-v3-decoder
        run: |
          rm -rf silk-v3-decoder
          git clone https://github.com/kn007/silk-v3-decoder silk-v3-decoder

      - name: Apply repository patches to ffmpeg_src
        run: |
          set -euo pipefail
          echo "Applying patches to ffmpeg_src"
          cd ffmpeg_src && git apply --whitespace=fix ../patches/*.patch
        shell: bash

      - name: Configure & build static FFmpeg
        run: |
          chmod +x scripts/build_ffmpeg_linux_arm64.sh || true
          ./scripts/build_ffmpeg_linux_arm64.sh "$PREFIX"

      - name: Show installed libs
        run: ls -la "$PREFIX/lib" || true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install npm deps
        run: npm ci

      - name: Configure Node addon (point to built FFmpeg)
        run: npx cmake-js configure -- -DFFMPEG_SOURCE_DIR="$PREFIX"

      - name: Build Node addon (cmake-js)
        run: npx cmake-js build --arch=arm64 --runtime=node

      - name: Upload built addon
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-addon-linux-arm64
          path: |
            build/**/*.node
            Release/**/*.node

      - name: Upload FFmpeg headers and libs
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-libs-linux-arm64
          path: |
            ffmpeg_out/include
            ffmpeg_out/lib

  build-windows:
    name: Build on Windows
    runs-on: windows-2022
    env:
      PREFIX: ${{ github.workspace }}/ffmpeg_out
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Install MSYS2 and required packages
        id: msys2
        uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          cache: true
          update: true
          install: >-
            git
            mingw-w64-x86_64-yasm
            mingw-w64-x86_64-nasm
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-nodejs

      - name: Clone FFmpeg release/7.1 into ffmpeg_src
        run: |
          if (Test-Path ffmpeg_src) { Remove-Item -Recurse -Force ffmpeg_src }
          git clone --depth 1 --branch release/7.1 https://github.com/FFmpeg/FFmpeg ffmpeg_src

      - name: Clone silk-v3-decoder
        run: |
          if (Test-Path silk-v3-decoder) { Remove-Item -Recurse -Force silk-v3-decoder }
          git clone https://github.com/kn007/silk-v3-decoder silk-v3-decoder

      - name: Apply repository patches to ffmpeg_src (Windows/msys2)
        env:
          MSYS2_LOCATION: ${{ steps.msys2.outputs.msys2-location }}
        shell: msys2 {0}
        run: |
          set -euo pipefail
          echo "Applying patches to ffmpeg_src"
          cd "$(cygpath -u "$GITHUB_WORKSPACE")/ffmpeg_src" && git apply --ignore-whitespace ../patches/*.patch

      - name: Build FFmpeg
        env:
          MSYS2_LOCATION: ${{ steps.msys2.outputs.msys2-location }}
        shell: msys2 {0}
        run: |
          cd "$(cygpath -u "$GITHUB_WORKSPACE")"
          echo "Using MSYS2 at: $MSYS2_LOCATION"
          export MSYS2_ARG_CONV_EXCL="*"
          pacman -S --noconfirm gawk make diffutils
          export AWK=gawk
          chmod +x ./scripts/build_ffmpeg_win.sh || true
          ./scripts/build_ffmpeg_win.sh "$(cygpath -u "$PREFIX")"

      - name: Install npm deps (inside msys2)
        shell: msys2 {0}
        run: |
          cd "$(cygpath -u "$GITHUB_WORKSPACE")"
          echo "--- Diagnostics before npm ci ---"
          which node || true
          node --version || true
          which cmake || true
          cmake --version || true
          which pkg-config || true
          pkg-config --version || true
          npm ci

      - name: Configure Node addon (point to built FFmpeg) and build
        shell: msys2 {0}
        run: |
          cd "$(cygpath -u "$GITHUB_WORKSPACE")"
          WIN_PREFIX="$(cygpath -w "$PREFIX")"
          npx cmake-js configure -- -DFFMPEG_SOURCE_DIR="$WIN_PREFIX"
          npx cmake-js build --arch=x64 --runtime=node

      - name: Upload built addon
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-addon-windows
          path: |
            build\**\*.node
            Release\**\*.node
            ffmpeg_out\lib\**\*.node
      - name: Upload FFmpeg headers and libs
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-libs-windows
          path: |
            ffmpeg_out\include
            ffmpeg_out\lib

  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    env:
      PREFIX: ${{ github.workspace }}/ffmpeg_out
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies (Homebrew)
        run: |
          brew update
          brew install automake autoconf pkg-config yasm nasm libtool git python3

      - name: Clone FFmpeg release/7.1 into ffmpeg_src
        run: |
          rm -rf ffmpeg_src
          git clone --depth 1 --branch release/7.1 https://github.com/FFmpeg/FFmpeg ffmpeg_src

      - name: Clone silk-v3-decoder
        run: |
          rm -rf silk-v3-decoder
          git clone https://github.com/kn007/silk-v3-decoder silk-v3-decoder

      - name: Apply repository patches to ffmpeg_src on macOS
        run: |
          set -euo pipefail
          echo "Applying patches to ffmpeg_src"
          cd ffmpeg_src && git apply --whitespace=fix ../patches/*.patch

      - name: Configure & build static FFmpeg
        run: |
          chmod +x scripts/build_ffmpeg_mac.sh || true
          ./scripts/build_ffmpeg_mac.sh "$PREFIX"

      - name: Show installed libs
        run: ls -la "$PREFIX/lib" || true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install npm deps
        run: npm ci

      - name: Configure Node addon (point to built FFmpeg)
        run: npx cmake-js configure -- -DFFMPEG_SOURCE_DIR="$PREFIX"

      - name: Build Node addon (cmake-js)
        run: npx cmake-js build --arch=x64 --runtime=node

      - name: Upload built addon
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-addon-macos
          path: |
            build/**/*.node
            Release/**/*.node
      - name: Upload FFmpeg headers and libs
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-libs-macos
          path: |
            ffmpeg_out/include
            ffmpeg_out/lib
